# this TOML document is used to configure the raw data manipulation, reconstruction and likelihood
# tools

[General]
outpath = "" # the output path in which the generated H5 files will be placed
# prefixes for the different resulting files
tpx3Prefix = "tpx3_" # the prefix of the output file after `readTpx3`
# the following
rawStep = "raw" # the prefix of the output file after `raw_data_manipulation`
recoStep = "reco" # the prefix of the output file after `reconstruction`
# the type of data
calibType = "calibration"
backType = "data"
# whether multiple or single run
singleRun = "run"
mulitpleRun = "runs"
# template to use for files with multiple runs
nameTmpl = "$type$runs$year_$step.h5"

[Calibration]
showPlots = false
plotDirectory = "out"
# whether to compute the gas gain based on the full run or using time intervals (default). If
# `fullRunGasGain` is true, the below options are ignored
fullRunGasGain = false
# minutes for binning of gas gain (set to 0 if `fullRunGasGain = true` when running
# with `--only_gain_fit`!)
gasGainInterval = 90
# minutes the gas gain interval has to be long at least. This comes into play
# at the end of a run `(tRun mod gasGainInterval) = lastSliceLength`. If the
# remaining time `lastSliceLength` is less than `minimumGasGainInterval`, the
# slice will be absorbed into the second to last, making that longer.
minimumGasGainInterval = 25

# decides if `charge` dataset is deleted when running `only_charge`.
# by default this is disabled, because the attributes of the dataset
# contain things beyond the actual charge calibration!
deleteChargeDset = true
# the gas gain vs energy calibration factor computation to use
# - "": the default of just one gas gain per calibration run based on
#       one gas gain interval for each run
# - "Mean": use the mean of all gas gain time slices
# - "Individual": use the factors obtained from one Fe fit per gas gain slice
gasGainEnergyKind = "Individual"

[RawData]
plotDirectory = "out"
tpx3ToACutoff = 50 # ToA cluster cutoff!
# ToT related cuts. Removes any pixel below and above the given threshold
# The range is *inclusive*
rmTotLow = 0 # this default excludes nothing
rmTotHigh = 11810
# for Tpx3 better:
# rmTotLow = 5
# rmTotHigh = 250

[Reconstruction]
# clustering algorithm to use (for reconstruction only! See likelihood for septem veto!)
clusterAlgo = "default" # choose from {"default", "dbscan"}
# the search radius for the cluster finding algorithm in pixel
searchRadius = 50 # for default clustering algorithm
epsilon = 65 # for DBSCAN algorithm

[Likelihood]
# the signal efficiency to be used for the neural network veto
neuralNetSignalEff = 0.95
neuralNetCutKind = "local" # global, local, interpolated
# the signal efficiency to be used for the logL cut (percentage of X-rays of the
# reference distributions that will be recovered with the corresponding cut value)
signalEfficiency = 0.8
# the CDL morphing technique to be used (see `MorphingKind` enum), none or linear
morphingKind = "Linear"
# clustering algorithm for septem veto
clusterAlgo = "dbscan" # choose from {"default", "dbscan"}
# the search radius for the cluster finding algorithm in pixel
searchRadius = 50 # for default clustering algorithm
epsilon = 65 # for DBSCAN algorithm

[CDL]
# whether to fit the CDL spectra by run or by target/filter combination.
# If `true` the resulting `calibration-cdl*.h5` file will contain sub groups
# for each run in each target/filter combination group!
fitByRun = true